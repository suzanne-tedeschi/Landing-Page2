-- üîß SOLUTION D√âFINITIVE POUR LE PROBL√àME RLS R√âCURRENT
-- Ex√©cutez ces commandes dans l'ordre dans votre Supabase SQL Editor

-- 1. V√©rifier l'√©tat actuel
SELECT 
    schemaname, 
    tablename, 
    rowsecurity as "RLS_Enabled",
    CASE 
        WHEN rowsecurity THEN 'RLS est ACTIV√â ‚ö†Ô∏è' 
        ELSE 'RLS est D√âSACTIV√â ‚úÖ' 
    END as status
FROM pg_tables 
WHERE tablename = 'waiting_list';

-- 2. Voir toutes les politiques existantes
SELECT 
    policyname as "Nom_Politique",
    cmd as "Type_Operation", 
    roles as "R√¥les",
    permissive as "Permissive"
FROM pg_policies 
WHERE tablename = 'waiting_list';

-- 3. SOLUTION 1: D√©sactiver compl√®tement RLS (Recommand√© pour une landing page)
ALTER TABLE public.waiting_list DISABLE ROW LEVEL SECURITY;

-- 4. SOLUTION 2: Si vous voulez garder RLS mais autoriser les insertions
-- (D√©commentez les lignes ci-dessous si vous pr√©f√©rez cette approche)
/*
-- Activer RLS
ALTER TABLE public.waiting_list ENABLE ROW LEVEL SECURITY;

-- Supprimer toutes les politiques existantes
DROP POLICY IF EXISTS "Enable insert for anon users" ON public.waiting_list;
DROP POLICY IF EXISTS "Allow public inserts" ON public.waiting_list;
DROP POLICY IF EXISTS "Enable insert for all users" ON public.waiting_list;
DROP POLICY IF EXISTS "Allow all operations" ON public.waiting_list;

-- Cr√©er une politique permissive pour toutes les op√©rations
CREATE POLICY "waiting_list_policy" ON public.waiting_list
    FOR ALL 
    USING (true) 
    WITH CHECK (true);

-- Accorder les permissions √† tous les r√¥les
GRANT ALL ON public.waiting_list TO anon;
GRANT ALL ON public.waiting_list TO authenticated;
*/

-- 5. V√©rification finale
SELECT 
    'RLS Status:' as info,
    CASE 
        WHEN rowsecurity THEN 'ACTIV√â - V√©rifiez les politiques' 
        ELSE 'D√âSACTIV√â - Insertions autoris√©es ‚úÖ' 
    END as status
FROM pg_tables 
WHERE tablename = 'waiting_list';

-- 6. Test d'insertion pour v√©rifier
-- INSERT INTO public.waiting_list (email) VALUES ('test-sql-' || extract(epoch from now()) || '@example.com');

-- 7. Pour √©viter que le probl√®me revienne, vous pouvez cr√©er cette fonction
CREATE OR REPLACE FUNCTION ensure_waiting_list_access()
RETURNS void AS $$
BEGIN
    -- S'assurer que RLS est d√©sactiv√©
    ALTER TABLE public.waiting_list DISABLE ROW LEVEL SECURITY;
    
    -- Accorder les permissions
    GRANT INSERT, SELECT ON public.waiting_list TO anon;
    GRANT INSERT, SELECT ON public.waiting_list TO authenticated;
END;
$$ LANGUAGE plpgsql;

-- Ex√©cuter la fonction
SELECT ensure_waiting_list_access();